{"ast":null,"code":"var _jsxFileName = \"D:\\\\javaproject\\\\react_staging\\\\src\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport List from './components/List';\nimport Footer from './components/Footer';\nimport { nanoid } from 'nanoid';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    // init state\n    this.state = {\n      todos: [{\n        id: nanoid(),\n        name: 'eating',\n        done: true\n      }, {\n        id: nanoid(),\n        name: 'sleeping',\n        done: true\n      }, {\n        id: nanoid(),\n        name: 'coding',\n        done: false\n      }]\n    };\n    // addTodo is used to add a TodoObj into todos\n    this.addTodo = todoObj => {\n      const {\n        todos\n      } = this.state;\n      const newTodos = [todoObj, ...todos];\n      this.setState({\n        todos: newTodos\n      });\n    };\n    //  update todos when todoObj checked or unchecked\n    this.updateTodo = (id, done) => {\n      const {\n        todos\n      } = this.state;\n      const newTodos = todos.map(todoObj => {\n        if (todoObj.id === id) return {\n          ...todoObj,\n          done: done\n        };else return todoObj;\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n  }\n  render() {\n    const {\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          addTodo: this.addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          todos: todos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Header","List","Footer","nanoid","jsxDEV","_jsxDEV","App","constructor","arguments","state","todos","id","name","done","addTodo","todoObj","newTodos","setState","updateTodo","map","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/javaproject/react_staging/src/App.jsx"],"sourcesContent":["import React,{Component} from 'react'\nimport Header from './components/Header'\nimport List from './components/List'\nimport Footer from './components/Footer'\nimport {nanoid} from 'nanoid'\nimport './App.css';\n\n\nexport default class App extends Component {\n\n  // init state\n  state = {todos:[\n    {id:nanoid(),name:'eating',done:true},\n    {id:nanoid(),name:'sleeping',done:true},\n    {id:nanoid(),name:'coding',done:false}\n  ]}\n\n  // addTodo is used to add a TodoObj into todos\n  addTodo = (todoObj) => {\n    const {todos} = this.state\n    const newTodos = [todoObj,...todos]\n    this.setState({todos:newTodos})\n  }\n\n  //  update todos when todoObj checked or unchecked\n  updateTodo = (id,done)=>{\n    const{todos} = this.state\n    const newTodos = todos.map((todoObj)=>{\n      if(todoObj.id === id) return {...todoObj,done:done}\n      else return todoObj\n    })\n    this.setState({todos:newTodos})\n  }\n\n  render(){\n    const {todos} = this.state\n    return(\n      <div className=\"todo-container\">\n        <div className=\"todo-wrap\">\n          <Header addTodo = {this.addTodo}/>\n          <List todos={todos}/>\n          <Footer/>\n        </div>\n      </div>\n    )\n  }  \n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,SAAS,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAAQC,MAAM,QAAO,QAAQ;AAC7B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,eAAe,MAAMC,GAAG,SAASP,SAAS,CAAC;EAAAQ,YAAA;IAAA,SAAAC,SAAA;IAEzC;IAAA,KACAC,KAAK,GAAG;MAACC,KAAK,EAAC,CACb;QAACC,EAAE,EAACR,MAAM,EAAE;QAACS,IAAI,EAAC,QAAQ;QAACC,IAAI,EAAC;MAAI,CAAC,EACrC;QAACF,EAAE,EAACR,MAAM,EAAE;QAACS,IAAI,EAAC,UAAU;QAACC,IAAI,EAAC;MAAI,CAAC,EACvC;QAACF,EAAE,EAACR,MAAM,EAAE;QAACS,IAAI,EAAC,QAAQ;QAACC,IAAI,EAAC;MAAK,CAAC;IACvC,CAAC;IAEF;IAAA,KACAC,OAAO,GAAIC,OAAO,IAAK;MACrB,MAAM;QAACL;MAAK,CAAC,GAAG,IAAI,CAACD,KAAK;MAC1B,MAAMO,QAAQ,GAAG,CAACD,OAAO,EAAC,GAAGL,KAAK,CAAC;MACnC,IAAI,CAACO,QAAQ,CAAC;QAACP,KAAK,EAACM;MAAQ,CAAC,CAAC;IACjC,CAAC;IAED;IAAA,KACAE,UAAU,GAAG,CAACP,EAAE,EAACE,IAAI,KAAG;MACtB,MAAK;QAACH;MAAK,CAAC,GAAG,IAAI,CAACD,KAAK;MACzB,MAAMO,QAAQ,GAAGN,KAAK,CAACS,GAAG,CAAEJ,OAAO,IAAG;QACpC,IAAGA,OAAO,CAACJ,EAAE,KAAKA,EAAE,EAAE,OAAO;UAAC,GAAGI,OAAO;UAACF,IAAI,EAACA;QAAI,CAAC,MAC9C,OAAOE,OAAO;MACrB,CAAC,CAAC;MACF,IAAI,CAACE,QAAQ,CAAC;QAACP,KAAK,EAACM;MAAQ,CAAC,CAAC;IACjC,CAAC;EAAA;EAEDI,MAAMA,CAAA,EAAE;IACN,MAAM;MAACV;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAC1B,oBACEJ,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BjB,OAAA;QAAKgB,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBjB,OAAA,CAACL,MAAM;UAACc,OAAO,EAAI,IAAI,CAACA;QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAClCrB,OAAA,CAACJ,IAAI;UAACS,KAAK,EAAEA;QAAM;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eACrBrB,OAAA,CAACH,MAAM;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}