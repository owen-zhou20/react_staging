{"ast":null,"code":"var _jsxFileName = \"D:\\\\javaproject\\\\react_staging\\\\src\\\\components\\\\Search\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport PubSub from 'pubsub-js';\n//import axios from 'axios'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor() {\n    super(...arguments);\n    this.search1 = () => {\n      const {\n        keyWordElement: {\n          value: keyWord\n        }\n      } = this;\n      // this.props.updateAppState({isFirst:false,isLoading:true}) \n      PubSub.publish('searchKey', {\n        isFirst: false,\n        isLoading: true\n      });\n      //#region\n      // axios \n      /*axios.get(`/api1/search/users?q=${keyWord}`).then(\r\n        response => {\r\n          // this.props.updateAppState({isLoading:false,users:response.data.items}) \r\n          PubSub.publish('searchKey',{isLoading:false,users:response.data.items})\r\n        },\r\n        error => {\r\n          // this.props.updateAppState({isLoading:false,err:error.message}) \r\n          PubSub.publish('searchKey',{isLoading:false,err:error.message})\r\n          //console.log('Fail',error);\r\n        }\r\n      ) */\n      //#endregion\n      // fetch\n      fetch(`/api1/search/users2?q=${keyWord}`).then(response => {\n        console.log('Success to connect servers');\n        return response.json();\n      }\n      /* error =>{\r\n        console.log('Fail to connect servers',error);\r\n        return new Promise(()=>{})\r\n      } */).then(response => {\n        console.log('Success to get data', response);\n      }\n      // error =>{console.log('Fail to get data',error)}\n      ).catch(error => {\n        console.log('Fail', error);\n      });\n    };\n    this.search = async () => {\n      const {\n        keyWordElement: {\n          value: keyWord\n        }\n      } = this;\n      PubSub.publish('searchKey', {\n        isFirst: false,\n        isLoading: true\n      });\n      try {\n        const response = await fetch(`/api1/search/users2?q=${keyWord}`);\n        const data = await response.json();\n        PubSub.publish('searchKey', {\n          isLoading: false,\n          users: data\n        });\n      } catch (error) {\n        PubSub.publish('searchKey', {\n          isLoading: false,\n          err: error.message\n        });\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"Search Github Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: c => this.keyWordElement = c,\n          type: \"text\",\n          placeholder: \"enter the name you search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.search,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","PubSub","jsxDEV","_jsxDEV","Search","constructor","arguments","search1","keyWordElement","value","keyWord","publish","isFirst","isLoading","fetch","then","response","console","log","json","catch","error","search","data","users","err","message","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","c","type","placeholder","onClick"],"sources":["D:/javaproject/react_staging/src/components/Search/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js'\r\n//import axios from 'axios'\r\n\r\nexport default class Search extends Component {\r\n\r\n  search1 = ()=>{\r\n    const {keyWordElement:{value:keyWord}} = this\r\n    // this.props.updateAppState({isFirst:false,isLoading:true}) \r\n    PubSub.publish('searchKey',{isFirst:false,isLoading:true})\r\n    //#region\r\n    // axios \r\n    /*axios.get(`/api1/search/users?q=${keyWord}`).then(\r\n      response => {\r\n        // this.props.updateAppState({isLoading:false,users:response.data.items}) \r\n        PubSub.publish('searchKey',{isLoading:false,users:response.data.items})\r\n      },\r\n      error => {\r\n        // this.props.updateAppState({isLoading:false,err:error.message}) \r\n        PubSub.publish('searchKey',{isLoading:false,err:error.message})\r\n        //console.log('Fail',error);\r\n      }\r\n    ) */\r\n      //#endregion\r\n    // fetch\r\n    fetch(`/api1/search/users2?q=${keyWord}`).then(\r\n      response =>{\r\n        console.log('Success to connect servers');\r\n        return response.json()\r\n    },\r\n      /* error =>{\r\n        console.log('Fail to connect servers',error);\r\n        return new Promise(()=>{})\r\n      } */\r\n    ).then(\r\n      response =>{console.log('Success to get data',response)},\r\n      // error =>{console.log('Fail to get data',error)}\r\n    ).catch(\r\n      (error)=>{console.log('Fail',error);}\r\n    )\r\n\r\n  }\r\n\r\n  search = async()=>{\r\n    const {keyWordElement:{value:keyWord}} = this\r\n    PubSub.publish('searchKey',{isFirst:false,isLoading:true})\r\n    try {\r\n      const response = await fetch(`/api1/search/users2?q=${keyWord}`)\r\n      const data = await response.json()\r\n      PubSub.publish('searchKey',{isLoading:false,users:data})\r\n    } catch (error) {\r\n      PubSub.publish('searchKey',{isLoading:false,err:error.message})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <section className=\"jumbotron\">\r\n            <h3 className=\"jumbotron-heading\">Search Github Users</h3>\r\n            <div>\r\n                <input ref={c => this.keyWordElement = c} type=\"text\" placeholder=\"enter the name you search\"/>&nbsp;\r\n                <button onClick={this.search}>Search</button>\r\n            </div>\r\n        </section>\r\n    )\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,WAAW;AAC9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,MAAMC,MAAM,SAASJ,SAAS,CAAC;EAAAK,YAAA;IAAA,SAAAC,SAAA;IAAA,KAE5CC,OAAO,GAAG,MAAI;MACZ,MAAM;QAACC,cAAc,EAAC;UAACC,KAAK,EAACC;QAAO;MAAC,CAAC,GAAG,IAAI;MAC7C;MACAT,MAAM,CAACU,OAAO,CAAC,WAAW,EAAC;QAACC,OAAO,EAAC,KAAK;QAACC,SAAS,EAAC;MAAI,CAAC,CAAC;MAC1D;MACA;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACM;MACF;MACAC,KAAK,CAAE,yBAAwBJ,OAAQ,EAAC,CAAC,CAACK,IAAI,CAC5CC,QAAQ,IAAG;QACTC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QACzC,OAAOF,QAAQ,CAACG,IAAI,EAAE;MAC1B;MACE;AACN;AACA;AACA,UAHM,CAID,CAACJ,IAAI,CACJC,QAAQ,IAAG;QAACC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACF,QAAQ,CAAC;MAAA;MACvD;MAAA,CACD,CAACI,KAAK,CACJC,KAAK,IAAG;QAACJ,OAAO,CAACC,GAAG,CAAC,MAAM,EAACG,KAAK,CAAC;MAAC,CAAC,CACtC;IAEH,CAAC;IAAA,KAEDC,MAAM,GAAG,YAAS;MAChB,MAAM;QAACd,cAAc,EAAC;UAACC,KAAK,EAACC;QAAO;MAAC,CAAC,GAAG,IAAI;MAC7CT,MAAM,CAACU,OAAO,CAAC,WAAW,EAAC;QAACC,OAAO,EAAC,KAAK;QAACC,SAAS,EAAC;MAAI,CAAC,CAAC;MAC1D,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAAE,yBAAwBJ,OAAQ,EAAC,CAAC;QAChE,MAAMa,IAAI,GAAG,MAAMP,QAAQ,CAACG,IAAI,EAAE;QAClClB,MAAM,CAACU,OAAO,CAAC,WAAW,EAAC;UAACE,SAAS,EAAC,KAAK;UAACW,KAAK,EAACD;QAAI,CAAC,CAAC;MAC1D,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdpB,MAAM,CAACU,OAAO,CAAC,WAAW,EAAC;UAACE,SAAS,EAAC,KAAK;UAACY,GAAG,EAACJ,KAAK,CAACK;QAAO,CAAC,CAAC;MACjE;IACF,CAAC;EAAA;EAEDC,MAAMA,CAAA,EAAG;IACP,oBACIxB,OAAA;MAASyB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC1B1B,OAAA;QAAIyB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC1D9B,OAAA;QAAA0B,QAAA,gBACI1B,OAAA;UAAO+B,GAAG,EAAEC,CAAC,IAAI,IAAI,CAAC3B,cAAc,GAAG2B,CAAE;UAACC,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAA2B;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,QAC/F,eAAA9B,OAAA;UAAQmC,OAAO,EAAE,IAAI,CAAChB,MAAO;UAAAO,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAEhB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}